{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:3000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const notesAPI = {\n  // Get all notes\n  getAllNotes: async (params = {}) => {\n    const response = await api.get('/notes', {\n      params\n    });\n    return response.data;\n  },\n  // Get note by ID\n  getNoteById: async id => {\n    const response = await api.get(`/notes/${id}`);\n    return response.data;\n  },\n  // Create new note\n  createNote: async noteData => {\n    const response = await api.post('/notes', noteData);\n    return response.data;\n  },\n  // Update note\n  updateNote: async (id, noteData) => {\n    const response = await api.put(`/notes/${id}`, noteData);\n    return response.data;\n  },\n  // Delete note\n  deleteNote: async id => {\n    const response = await api.delete(`/notes/${id}`);\n    return response.data;\n  },\n  // Search notes\n  searchNotes: async query => {\n    const response = await api.get('/notes/search', {\n      params: {\n        q: query\n      }\n    });\n    return response.data;\n  },\n  // Get notes by category\n  getNotesByCategory: async category => {\n    const response = await api.get(`/notes/category/${category}`);\n    return response.data;\n  },\n  // Toggle pin status\n  togglePinNote: async id => {\n    const response = await api.patch(`/notes/${id}/pin`);\n    return response.data;\n  },\n  // Toggle archive status\n  toggleArchiveNote: async id => {\n    const response = await api.patch(`/notes/${id}/archive`);\n    return response.data;\n  },\n  // Get all categories\n  getCategories: async () => {\n    const response = await api.get('/notes/categories');\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","notesAPI","getAllNotes","params","response","get","data","getNoteById","id","createNote","noteData","post","updateNote","put","deleteNote","delete","searchNotes","query","q","getNotesByCategory","category","togglePinNote","patch","toggleArchiveNote","getCategories"],"sources":["C:/Users/Huawei/notes-api/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:3000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\nexport const notesAPI = {\r\n  // Get all notes\r\n  getAllNotes: async (params = {}) => {\r\n    const response = await api.get('/notes', { params });\r\n    return response.data;\r\n  },\r\n\r\n  // Get note by ID\r\n  getNoteById: async (id) => {\r\n    const response = await api.get(`/notes/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Create new note\r\n  createNote: async (noteData) => {\r\n    const response = await api.post('/notes', noteData);\r\n    return response.data;\r\n  },\r\n\r\n  // Update note\r\n  updateNote: async (id, noteData) => {\r\n    const response = await api.put(`/notes/${id}`, noteData);\r\n    return response.data;\r\n  },\r\n\r\n  // Delete note\r\n  deleteNote: async (id) => {\r\n    const response = await api.delete(`/notes/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Search notes\r\n  searchNotes: async (query) => {\r\n    const response = await api.get('/notes/search', { params: { q: query } });\r\n    return response.data;\r\n  },\r\n\r\n  // Get notes by category\r\n  getNotesByCategory: async (category) => {\r\n    const response = await api.get(`/notes/category/${category}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Toggle pin status\r\n  togglePinNote: async (id) => {\r\n    const response = await api.patch(`/notes/${id}/pin`);\r\n    return response.data;\r\n  },\r\n\r\n  // Toggle archive status\r\n  toggleArchiveNote: async (id) => {\r\n    const response = await api.patch(`/notes/${id}/archive`);\r\n    return response.data;\r\n  },\r\n\r\n  // Get all categories\r\n  getCategories: async () => {\r\n    const response = await api.get('/notes/categories');\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport default api;\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B;AAEhD,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,QAAQ,GAAG;EACtB;EACAC,WAAW,EAAE,MAAAA,CAAOC,MAAM,GAAG,CAAC,CAAC,KAAK;IAClC,MAAMC,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAAC,QAAQ,EAAE;MAAEF;IAAO,CAAC,CAAC;IACpD,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAC,WAAW,EAAE,MAAOC,EAAE,IAAK;IACzB,MAAMJ,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAAC,UAAUG,EAAE,EAAE,CAAC;IAC9C,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAG,UAAU,EAAE,MAAOC,QAAQ,IAAK;IAC9B,MAAMN,QAAQ,GAAG,MAAMP,GAAG,CAACc,IAAI,CAAC,QAAQ,EAAED,QAAQ,CAAC;IACnD,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAM,UAAU,EAAE,MAAAA,CAAOJ,EAAE,EAAEE,QAAQ,KAAK;IAClC,MAAMN,QAAQ,GAAG,MAAMP,GAAG,CAACgB,GAAG,CAAC,UAAUL,EAAE,EAAE,EAAEE,QAAQ,CAAC;IACxD,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAQ,UAAU,EAAE,MAAON,EAAE,IAAK;IACxB,MAAMJ,QAAQ,GAAG,MAAMP,GAAG,CAACkB,MAAM,CAAC,UAAUP,EAAE,EAAE,CAAC;IACjD,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAU,WAAW,EAAE,MAAOC,KAAK,IAAK;IAC5B,MAAMb,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAAC,eAAe,EAAE;MAAEF,MAAM,EAAE;QAAEe,CAAC,EAAED;MAAM;IAAE,CAAC,CAAC;IACzE,OAAOb,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAa,kBAAkB,EAAE,MAAOC,QAAQ,IAAK;IACtC,MAAMhB,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAAC,mBAAmBe,QAAQ,EAAE,CAAC;IAC7D,OAAOhB,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAe,aAAa,EAAE,MAAOb,EAAE,IAAK;IAC3B,MAAMJ,QAAQ,GAAG,MAAMP,GAAG,CAACyB,KAAK,CAAC,UAAUd,EAAE,MAAM,CAAC;IACpD,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAiB,iBAAiB,EAAE,MAAOf,EAAE,IAAK;IAC/B,MAAMJ,QAAQ,GAAG,MAAMP,GAAG,CAACyB,KAAK,CAAC,UAAUd,EAAE,UAAU,CAAC;IACxD,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAkB,aAAa,EAAE,MAAAA,CAAA,KAAY;IACzB,MAAMpB,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAG,CAAC,mBAAmB,CAAC;IACnD,OAAOD,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC;AAED,eAAeT,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}